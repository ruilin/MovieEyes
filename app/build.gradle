apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "ruilin.com.movieeyes"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 10
        versionName "1.3.0"
        multiDexEnabled true
    }
    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }
    //签名
    signingConfigs {
        debug {
//            storeFile file("C:/Users/xxx/.android/debug.keystore")
        }
        relealse {
            //这样写就得把demo.jk文件放在项目目录
//            storeFile file("demo.jks")
//            storePassword "demo123456"
//            keyAlias "demo_4"
//            keyPassword "demo123456"
        }
    }
    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"

            //混淆
            minifyEnabled true

            //Zipalign优化
            zipAlignEnabled true

            // 移除无用的resource文件
            shrinkResources true
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.relealse
        }
    }
    externalNativeBuild {
        ndkBuild {
            path file("src/main/jni/Android.mk")
        }
    }
    //渠道Flavors，我这里写了一些常用的
    productFlavors {
        PuGongYing {}
        KuAn {}
        QiHu {}
        SouHu {}
        QQ {}
        Baidu {}
        Umeng {}
        GooglePlay {}
        WanDouJia {}
        XiaoMi {}
        huawei {}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [CHANNEL_NAME: name]
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}.apk")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':PushSDK')
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.github.satyan:sugar:1.5'
    compile 'org.jsoup:jsoup:1.9.2'
//    compile 'com.yolanda.nohttp:nohttp:+'
//    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'tv.danmaku.ijk.media:ijkplayer-java:0.5.1'
    compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.5.1'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.google.android.gms:play-services:9.4.0'
    // LeanCloud 基础包
    compile ('cn.leancloud.android:avoscloud-sdk:v3.+')
}
